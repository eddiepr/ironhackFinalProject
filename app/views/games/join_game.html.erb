<% if user_signed_in? %>	
		<body class="join_game-body">
			<div class="modal fade js-modal">
		  		<div class="modal-dialog">
		    		<div class="modal-content">
						<div class="modal-header">
						<!-- Close button -->
							<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						    	<span>&times;</span>
							</button>
							<p>
								Your player rating is based on the amount of moves that you make for the color that
								wins the game for a particular board vs the amount of moves that you make for the
								losing color of a particular board
							</p>
						</div>

						<div class="modal-body">
						</div>

			    	</div><!-- /.modal-content -->
			  	</div><!-- /.modal-dialog -->
			</div>
			<% current_user.update_attribute(:active, true) %>
			<% user_count = User.where(:active => true).count %>
			<% game_count = Game.where(:finished => false).count %>
			<% puts game_count %>
			<% if (user_count > (game_count/2)) %>
				<% Square.make %>
			<% end %>
			<div class="container board">
				<div class="row">
					<div class="col-sm-3">
						<div class="display-user-count">
							Current Active Users: <%= user_count %>
						</div>		
					</div>
					<div class="col-sm-9">
						<div class="col-sm-2">
						</div>
						<div class="zoom-title"> Zoom Chess </div>
					</div>
				</div>
				<div class="row">
					<div class="col-sm-3">
						<br>
						<br>
						<br>
						<br>
						<div class="absolute-left">
							<div class="space-left">
								<div class="timer-description">You have 60 seconds to make a move</div>
								<div id="timer"></div>
								<br> 
								<div class="turn">Turn:
								</div>
									<% if @gameo != nil %>
										<div class="turn"><%= @gameo.turn %></div>
									<% else %>
										Turn: White
									<% end %>
								<br>
								<br>
								<br>
								<div class="board-number-display">
									Board number:
									<%= @gmId %>
								</div>
							</div>
						</div>
						
					</div>
					<div class="col-sm-7 just-board">
						<div class="actually-just-board">
						<% if (@gameo.turn == "white") %>
							<% for j in 1..8 %>
								<% if (j%2 != 0) %>
									<div class="row">
										<% for i in 1..8 %>
											<% if (i%2 == 0) %>
												<div class=" col-sm-1 <%= 'row' + j.to_s %> column <%= 'column' + i.to_s %> row-odd-column-even " data-row="<%= j%>" data-column="<%= i %>">
												</div>
											<% else %>
												<div class="col-sm-1 <%= 'row' + j.to_s %> column <%= 'column' + i.to_s %> row-odd-column-odd " data-row="<%= j%>" data-column="<%= i %>">
												</div>
											<% end %>
										<% end %>
									</div>
									<div class="row">
										<% for i in 1..8  %>
											<% if (i%2 == 0) %>
												<div class="col-sm-1 column <%= 'row' + (j + 1).to_s %> <%= 'column' + i.to_s %> row-even-column-even " data-row="<%= j + 1%>" data-column="<%= i %>">
												</div>
											<% else %>
												<div class="col-sm-1 column <%= 'row' + (j + 1).to_s %> <%= 'column' + i.to_s %> row-even-column-odd " data-row="<%= j + 1%>" data-column="<%= i %>">
												</div>
											<% end %>
										<% end %>
									</div>
								<% end %>
							<% end %>
						<% else %>
							<% for j in [8, 7, 6, 5, 4, 3, 2, 1] %>
								<% if (j%2 != 0) %>
									<div class="row">
										<% for i in [8, 7, 6, 5, 4, 3, 2, 1]  %>
											<% if (i%2 == 0) %>
												<div class="col-sm-1 column <%= 'row' + (j + 1).to_s %> <%= 'column' + i.to_s %> row-even-column-odd-black " data-row="<%= j + 1%>" data-column="<%= i %>">
												</div>
											<% else %>
												<div class="col-sm-1 column <%= 'row' + (j + 1).to_s %> <%= 'column' + i.to_s %> row-even-column-even-black " data-row="<%= j + 1%>" data-column="<%= i %>">
												</div>
											<% end %>
										<% end %>
									</div>
									<div class="row">
										<% for i in [8, 7, 6, 5, 4, 3, 2, 1] %>
											<% if (i%2 == 0) %>
												<div class="col-sm-1 <%= 'row' + j.to_s %> column <%= 'column' + i.to_s %> row-odd-column-odd-black " data-row="<%= j%>" data-column="<%= i %>">
												</div>
											<% else %>
												<div class="col-sm-1 <%= 'row' + j.to_s %> column <%= 'column' + i.to_s %> row-odd-column-even-black " data-row="<%= j%>" data-column="<%= i %>">
												</div>
											<% end %>
										<% end %>
									</div>
								<% end %>
							<% end %>
						<% end %>
					  </div>
					</div>
					<div class="col-sm-2">
						<div class="absolute-right">
							<div class="leave-game-div">
								<a class="leave-game" href="/">Leave Game </a>
							</div>
							<div class="checkmate-button btn btn-primary">
								declare checkmate
							</div>
							<br>
							<br>
							<br>
							<br>
						</div>
						<div class="space-right">
							Your Stats
							<br>
							<a class="player-rating">Player Rating:</a> 0
							<%= current_user.rating %>
							<br>
							<br>
							<% turn_count = Turn.where(:user_id => current_user.id).count %>
							Number of moves you have made: <%= turn_count %>
							<br>
							<br>
							<br>
							<!-- <div class="toggle-chat">Chat
							</div> -->
						</div>
						<div class="whole-chat">
							<div class="chat-display" id="chat-display">
								<ul class="chat-ul">
								</ul>
							</div>
							<br>
							<form class="chat-form">
								<input class="chat-input-area" type="text"></input>
								<button class="js-submit" type="submit">SUBMIT</button>
							</form>
						</div>
					</div>
				</div>
			<!-- render("partials/boardrow") %> -->
			<!-- render("partials/boardrowEven") %> -->
			
		</body>
<% else %>
	<h4>You must be logged in to join the game</h4>
<% end %>






































<script>
$(document).on('ready', function () {

	

	$('#timer').timer({
	    duration: 60,
	    callback: whatEver //Specify start time in seconds
	});

	var piece;
	var postingFlag = true;
	var movingFlag = false;
	var gameId;
	var clickedPieceSquare;
	var clickedPieceSquareContents;
	var moveToSquareAndContents;
	var contents;
	var data;
	var activeData;
	var TheResponse;
	var clickedPieceSquareDiv;
	var moveToSquareDiv;
	var pieceContent;

	function whatEver(){
		console.log("Done")
	}

	function onModal (event) {
		event.preventDefault();
		$('.js-modal').modal();
	}
	$('.player-rating').on('click', onModal);




	// activeData = {
	// 			active: false,
	// 		}
	window.onbeforeunload = updateUserActive;
	  function updateUserActive() {
	   	$.ajax({
		    type: "PATCH",
		    url: "/active",
		    data: '',  //this is where I need to post the updated contents in games.id#.squares table.
	    					// Also need to have a users table and update how many moves they made for that side in a 
	    					// 	particular game.  Maybe with: Users has_many games through: newTable, Games has_many users through: newTable
		    success: onSaveSuccessActivePatch,
		    error: onSaveFailureActivePatch,
		}); 
	  }

	  function onSaveSuccessActivePatch () {
	  	console.log("updateActive success")
	  }
	  function onSaveFailureActivePatch (err) {
	  	console.log("onSaveFailureActivePatch error:")
  		console.log(err);
	  }
 		




	function nextLayout () {
		piece = "reset";
		postingFlag = true;
		movingFlag = false;
		gameId = "reset";
		clickedPieceSquare = "reset";
		clickedPieceSquareContents = "reset";
		moveToSquareAndContents = "reset";
		contents = "reset";
		data = "reset";
		// console.log("did this thing");

		$.ajax({
		    type: "GET",
		    url: "/squares",
		    data: '',
		    success: onSaveSuccess,
		    error: onSaveFailure,
		    dataType: "json"
		});

	}
	nextLayout ();

	function appendPieces (response) {
		var number = 0;

		for (var i=1; i<9; i++) {
			for (var j=1; j<9; j++) {
				$('.row' + i.toString() + '.column' + j.toString()).empty();
			}
		}
		response.spaces.forEach(function (item) {

			number = number + 1;  //the json object is sending me twice as many items as are in the database for some reason
			
			if (number <= 64) { //the json object is sending me twice as many items as are in the database for some reason
				for (var i=1; i<9; i++) {
					for (var j=1; j<9; j++) {				

						if (item.y == i && item.x == j && item.contents == "br") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="br">&#9820</div>')
							//use images maybe instead of glyphicons if I can't get glyphicons to work
						}
						if (item.y == i && item.x == j && item.contents == "bn") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="bn">&#9822</div>')
						}
						if (item.y == i && item.x == j && item.contents == "bb") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="bb">&#9821</div>')
						}
						if (item.y == i && item.x == j && item.contents == "bq") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="bq">&#9819</div>')
						}
						if (item.y == i && item.x == j && item.contents == "bk") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="bk">&#9818</div>')
						}
						if (item.y == i && item.x == j && item.contents == "bp") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="bp">&#9823</div>')
						}



						if (item.y == i && item.x == j && item.contents == "wr") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wr">&#9814</div>')
							//use images maybe instead of glyphicons if I can't get glyphicons to work
						}
						if (item.y == i && item.x == j && item.contents == "wn") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wn">&#9816</div>')
						}
						if (item.y == i && item.x == j && item.contents == "wb") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wb">&#9815</div>')
						}
						if (item.y == i && item.x == j && item.contents == "wq") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wq">&#9813</div>')
						}
						if (item.y == i && item.x == j && item.contents == "wk") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wk">&#9812</div>')
						}
						if (item.y == i && item.x == j && item.contents == "wp") {
							$('.row' + i.toString() + '.column' + j.toString()).append('<div class="piece" data-title="wp">&#9817</div>')
						}
						$('.row' + i.toString() + '.column' + j.toString()).on('click', function () {
							if (postingFlag == true) {
								// console.log(postingFlag);
								 //what is this supposed to do 
								// console.log($(this));
								if ( $(this).children().length > 0 ) {

									$(this).addClass("clicked");
									$(this).removeClass("column");
									postingFlag = false;
									clickedPieceSquareDiv = $(this);
									// console.log(i);
									// console.log($(this).attr('data-column'));
									// console.log($(this).attr('data-row'));
									clickedPieceSquare = {x: $(this).attr('data-column'), 
										y: $(this).attr('data-row')
									}
									contents = $(this).find('[data-title]').data('title');
									pieceContent = $(this).find('[data-title]');
									// console.log(contents);
									movingFlag = true;
									moveToSquare (response); 	
								}
							}
						})
					}
				}
			}
		})
	}

	function moveToSquarePartTwo (response) {
	
		if (movingFlag == true) {
			gameId = response.gmId;
			var updateGamesData = {
				id: gameId,
				finishedStatus: false
			}
			var updateTurnsData = {

			}
			data = {
				clickedPieceSquare: clickedPieceSquare,
		    	updateGamesData: updateGamesData,
		    	moveToSquareAndContents: moveToSquareAndContents
		    }
		    console.log(clickedPieceSquareDiv);
		    clickedPieceSquareDiv.empty();
		    moveToSquareDiv.empty();
		    moveToSquareDiv.append(pieceContent);
		    // console.log(moveToSquareAndContents)
		    // console.log(clickedPieceSquare);
		    setTimeout(function(){ 
	    		$.ajax({
			    type: "PATCH",
			    url: "/move",
			    data: data,  //this is where I need to post the updated contents in games.id#.squares table.
		    					// Also need to have a users table and update how many moves they made for that side in a 
		    					// 	particular game.  Maybe with: Users has_many games through: newTable, Games has_many users through: newTable
			    success: onSaveSuccessPatch,
			    error: onSaveFailurePatch,
			});
	    	}, 120);
		}
	}

	function moveToSquare (response) {
		for (var i=1; i<9; i++) { // this is every div on my board right now.  I could change this to just the container div
								  // I tried that actually and didnt work right anymore.  idk why
			for (var j=1; j<9; j++) {					
				$('.row' + i.toString() + '.column' + j.toString()).one('click', function(){
					// console.log(contents);
					moveToSquareDiv = $(this);
					moveToSquareAndContents = {
						x: $(this).attr('data-column'),
						y: $(this).attr('data-row'),
						contents: contents
					}
					moveToSquarePartTwo(response)
				});
			}
		}
	}


	// $(".toggle-chat").on("click", function () {
	// 	$(".whole-chat").toggle();
	// })


	$(".chat-form").submit(function(e) {       
      e.preventDefault();
      var words = $(".chat-input-area").val();
      $(".chat-input-area").val('');

      comment = {
				words: words
		    }

      $.ajax({
		    type: "POST",
		    url: "/chat",
		    data: comment,  //this is where I need to post the updated contents in games.id#.squares table.
	    					// Also need to have a users table and update how many moves they made for that side in a 
	    					// 	particular game.  Maybe with: Users has_many games through: newTable, Games has_many users through: newTable
		    success: onSaveSuccessActivePostChat,
		    error: onSaveFailureActivePostChat,
		}); 


      console.log(words);

    });

	// function onSaveFailurePatchLayout () {

	// }

	// function onSaveSuccessPatchLayout () {

	// }

	function onSaveFailurePatch (err) {
		console.log("error Posting move to database");
	}

	function onSaveSuccessPatch (response) {
		TheResponse = response;
		console.log("ran a patch");
		// console.log(response);
		location.reload();
		// appendPieces(response);
	}

	function onSaveFailure (err) {
		console.log(err);
		console.log("error getting chess pieces layout");
	}
	function onSaveSuccess (response) {
		TheResponse = response;
		console.log("ran a get");
		// console.log(response);
		appendPieces (response);	
	}

	function appendPhrases (response) {
		$(".chat-display").empty();
		// var emailName = response.email.split('@');
		for (var i = 0; i < response.words.length; i++) {
			$(".chat-display").append("<li>" + response.words[i] + "</li>");
		}
		var chatbox = document.getElementById('chat-display')
		chatbox.scrollTop = chatbox.scrollHeight
		// $(".chat-display").scrollTop = $(".chat-display").scrollHeight;
	}

	function onSaveSuccessActivePostChat (response) {
		appendPhrases (response);
	}
	function onSaveFailureActivePostChat (err) {
		console.log(err)
	}

	function onSaveSuccessUpdateChat (response) {
		appendPhrases (response);
	}

	function onSaveFailureUpdateChat (err) {
		console.log(err);
	}
	function onSaveSuccessPointsPatch (response) {
		location.reload();
	}
	function onSaveFailurePointsPatch (err) {
		console.log(err);
	}

	function updateChat () {
    	setTimeout(function(){ 
    		console.log("updating chat")
    		chatGet ();
    		updateChat ();
    	}, 2000);
	}
	function chatGet () {
		$.ajax({
		    type: "GET",
		    url: "/updateChat",
		    data: '',
		    success: onSaveSuccessUpdateChat,
		    error: onSaveFailureUpdateChat,
		    dataType: "json"
		});
	}
	chatGet ();
	updateChat ();

	function updateUserPoints () {
		var gameId = TheResponse.gmId;
		var updateGamesData = {
			id: gameId,
			finishedStatus: true
		}
		data = {
	    	updateGamesData: updateGamesData
	    }
		$.ajax({
		    type: "PATCH",
		    url: "/points",
		    data: data,
		    success: onSaveSuccessPointsPatch,
		    error: onSaveFailurePointsPatch,
		});
	}

	$(".checkmate-button").on("click", function () {
		updateUserPoints ();
	})
})
</script>